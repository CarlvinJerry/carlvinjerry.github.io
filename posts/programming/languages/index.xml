<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming category - Languages on RΞCURSION</title><link>https://carlvinjerry.github.io/posts/programming/languages/</link><description>Recent content in Programming category - Languages on RΞCURSION</description><generator>Hugo -- gohugo.io</generator><language>en</language><atom:link href="https://carlvinjerry.github.io/posts/programming/languages/index.xml" rel="self" type="application/rss+xml"/><item><title>What’s New in F# 9 for Quant Developers</title><link>https://carlvinjerry.github.io/posts/programming/languages/fsharp/fsharp-9-review/</link><pubDate>Wed, 23 Apr 2025 19:51:10 +0300</pubDate><guid>https://carlvinjerry.github.io/posts/programming/languages/fsharp/fsharp-9-review/</guid><description>Unlike general-purpose updates, many of F# 9&amp;rsquo;s features are particularly well-aligned with the needs of quantitative professionals—those who balance mathematical modeling, financial computation, and high-integrity codebases. These improvements refine the language’s functional core while addressing practical challenges faced in real-world applications, such as code readability, workflow modularity, and precision in data modeling.
In this post, I’ll walk through some of the key updates in F# 9 and explore how they can improve the way we write and structure quantitative code.</description></item></channel></rss>