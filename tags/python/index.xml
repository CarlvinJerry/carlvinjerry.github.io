<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Python on RΞCURSION</title><link>https://carlvinjerry.github.io/tags/python/</link><description>Recent content in Python on RΞCURSION</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 14 Sep 2023 06:00:20 +0600</lastBuildDate><atom:link href="https://carlvinjerry.github.io/tags/python/index.xml" rel="self" type="application/rss+xml"/><item><title>Mastering Python's Exceptional Complexity</title><link>https://carlvinjerry.github.io/posts/programming/code-sustainability/error-handling/python-exceptions/</link><pubDate>Thu, 14 Sep 2023 06:00:20 +0600</pubDate><guid>https://carlvinjerry.github.io/posts/programming/code-sustainability/error-handling/python-exceptions/</guid><description>Introduction Exception handling is a fundamental pillar of programming, and Python in particular, excels in this area given its robust and versatile error management system. A program terminates immediately it encounters an error, typically taking one of two forms: syntax errors and exceptions. In this article, we&amp;rsquo;ll demystify exceptions, distinguishing them from syntax errors, and explore the art of effectively managing them. Finally, we will look at some advanced techniques coupled with best practices for gracefully handling exceptions.</description></item></channel></rss>