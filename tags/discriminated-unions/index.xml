<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Discriminated Unions on RΞCURSION</title><link>https://carlvinjerry.github.io/tags/discriminated-unions/</link><description>Recent content in Discriminated Unions on RΞCURSION</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 21 Jul 2025 08:06:25 +0600</lastBuildDate><atom:link href="https://carlvinjerry.github.io/tags/discriminated-unions/index.xml" rel="self" type="application/rss+xml"/><item><title>Modelling Relationships in F# for Domain-Driven Design</title><link>https://carlvinjerry.github.io/posts/programming/functional-programming/discriminated-unions/</link><pubDate>Mon, 21 Jul 2025 08:06:25 +0600</pubDate><guid>https://carlvinjerry.github.io/posts/programming/functional-programming/discriminated-unions/</guid><description>This post explores F#&amp;rsquo;s discriminated unions for domain-driven design, focusing on financial systems. Through examples like modeling financial instruments, transactions, and account types, we demonstrate how to encode business rules, ensure type safety, and simplify complex domains using F#.</description></item></channel></rss>